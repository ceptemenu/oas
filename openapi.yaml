openapi: 3.0.0
info:
  version: 0.1.0
  title: CepteMenu OAS
  description: Open API Specification for Cepte Menu application.
  license:
    name: MIT
  contact:
    name: API Support
    url: https://ceptemenu.app/support
    email: support@ceptemenu.app
servers:
  - url: https://api.ceptemenu.app
tags:
  - name: auth
    description: Authentication related endpoints
  - name: account
    description: Account related endpoints
paths:
  /auth:
    post:
      summary: Issue new token
      operationId: auth.bearer
      description: Issue new bearer token with user credentials.
      tags:
        - auth
      requestBody:
        description: User account credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTokenRequest'
      responses:
        '201':
          $ref: '#/components/responses/TokenCreated'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /account:
    get:
      summary: Get user account detail
      operationId: account.me
      description: Get user account information for authenticated user.
      tags:
        - account
      security:
        - bearer: []
      responses:
        '200':
          $ref: '#/components/responses/AccountDetails'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Register new user account
      operationId: account.register
      description: Create new user account with given credentials and user account information.
      tags:
        - account
      requestBody:
        description: New user information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRegisterRequest'
      responses:
        '201':
          $ref: '#/components/responses/ResourceCreated'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
components:
  schemas:
    ValidationError:
      type: object
      required:
        - message
        - errors
      properties:
        message:
          type: string
          example: The given data was invalid.
        errors:
          type: object
          properties:
            key 1:
              type: array
              items:
                type: string
                example: Error message 1
            key 2:
              type: array
              items:
                type: string
                example: Error message 2
    IssueTokenRequest:
      title: Issue Token
      description: Credentials for issue new token
      required:
        - email
        - password
        - device_name
      type: object
      properties:
        email:
          title: E-Mail Address
          description: User e-mail address
          type: string
          format: email
        password:
          title: Password
          description: User password
          type: string
          format: password
        device_name:
          title: Device Name
          description: Device name
          type: string
          format: device
          example: MyPhone
    IssueToken:
      type: object
      properties:
        device_name:
          type: string
          example: MyPhone
        token:
          type: string
          format: password
        abilities:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        id:
          title: ID
          description: ID of the user account
          type: string
          format: uuid
          readOnly: true
          nullable: false
        name:
          title: User Name
          description: Display name for the user account
          type: string
          nullable: false
          example: John Doe
        email:
          title: E-Mail Address
          description: User e-mail address (null if no permission)
          type: string
          format: email
          nullable: true
          example: john@doe.tld
    AccountRegisterRequest:
      title: Account Register Request
      description: Credentials and user information for register new user account
      required:
        - name
        - email
        - password
        - password_confirmation
      type: object
      properties:
        name:
          title: User Name
          description: Display name for the user account
          type: string
          example: John Doe
        email:
          title: E-Mail Address
          description: User e-mail address
          type: string
          format: email
        password:
          title: Password
          description: User password
          type: string
          format: password
        password_confirmation:
          title: Password Confirmation
          description: User password confirmation (should be equal with password field)
          type: string
          format: password
  responses:
    UnprocessableContent:
      description: Unprocessable Content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    TokenCreated:
      description: Token created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssueToken'
    AccountDetails:
      description: Account details retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    Unauthorized:
      description: Unauthorized
    ResourceCreated:
      description: Resource created
  securitySchemes:
    bearer:
      type: http
      bearerFormat: JWT
      scheme: bearer
