openapi: 3.1.0
info:
  version: 0.1.0
  title: CepteMenu OAS
  description: Open API Specification for Cepte Menu application.
  license:
    name: MIT License
    identifier: MIT
    url: https://mit-license.org/
  contact:
    name: API Support
    url: https://ceptemenu.app/support
    email: support@ceptemenu.app
servers:
  - url: https://api.ceptemenu.app
tags:
  - name: Auth
    description: Authentication related endpoints
  - name: Account
    description: Account related endpoints
  - name: Place
    description: Place related endpoints
  - name: Place Category
    description: Place' category related endpoints
  - name: Place Product
    description: Place' product related endpoints
paths:
  /auth:
    post:
      summary: Issue new token
      operationId: auth.bearer
      description: Issue new bearer token with user credentials.
      tags:
        - Auth
      requestBody:
        description: User account credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTokenRequest'
      responses:
        '201':
          $ref: '#/components/responses/TokenCreated'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /account:
    get:
      summary: Get user account detail
      operationId: account.me
      description: Get user account information for authenticated user.
      tags:
        - Account
      security:
        - bearer: []
      responses:
        '200':
          $ref: '#/components/responses/AccountDetails'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Register new user account
      operationId: account.register
      description: Create new user account with given credentials and user account information.
      tags:
        - Account
      requestBody:
        description: New user information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRegisterRequest'
      responses:
        '201':
          $ref: '#/components/responses/ResourceCreated'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /places:
    get:
      summary: Place list
      operationId: place.index
      description: Retrieve place list.
      tags:
        - Place
      parameters:
        - $ref: '#/components/parameters/perPage'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/keywords'
      security:
        - {}
        - bearer: []
      responses:
        '200':
          description: Place list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minimum: 0
                    maximum: 100
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/Place'
                  links:
                    type: object
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                  meta:
                    type: object
                    properties:
                      path:
                        type: string
                      per_page:
                        type: integer
                        examples:
                          - 15
                      next_cursor:
                        type:
                          - string
                          - 'null'
                      prev_cursor:
                        type:
                          - string
                          - 'null'
    post:
      summary: Create Place
      operationId: place.create
      description: Create new place with given information.
      tags:
        - Place
      security:
        - bearer: []
      requestBody:
        description: Place to add to the application.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
      responses:
        '201':
          $ref: '#/components/responses/ResourceCreated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /places/{placeId}:
    get:
      summary: Get place detail
      operationId: place.show
      description: Get place information.
      parameters:
        - $ref: '#/components/parameters/placeId'
      tags:
        - Place
      security:
        - {}
        - bearer: []
      responses:
        '200':
          description: Place detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Place'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update place
      operationId: place.update
      description: Update place information.
      parameters:
        - $ref: '#/components/parameters/placeId'
      tags:
        - Place
      security:
        - bearer: []
      requestBody:
        description: Update place information in the application.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
      responses:
        '204':
          $ref: '#/components/responses/ResourceUpdated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
    delete:
      summary: Delete place
      operationId: place.delete
      description: Delete place from the application.
      parameters:
        - $ref: '#/components/parameters/placeId'
      tags:
        - Place
      security:
        - bearer: []
      responses:
        '204':
          $ref: '#/components/responses/ResourceDeleted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /places/{placeId}/landing:
    get:
      summary: Get place landing media
      operationId: place.landing
      description: Get place landing media object details.
      parameters:
        - $ref: '#/components/parameters/placeId'
      tags:
        - Place
      responses:
        '200':
          description: Place landing media detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Media'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Upload place landing media
      operationId: place.landing.upload
      description: Upload new landing media object to the place resource.
      parameters:
        - $ref: '#/components/parameters/placeId'
      tags:
        - Place
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
          image/webp:
            schema:
              type: string
              format: binary
      responses:
        '204':
          $ref: '#/components/responses/ResourceCreated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
    delete:
      summary: Delete place landing media
      operationId: place.landing.delete
      description: Delete landing media object of the place resource.
      parameters:
        - $ref: '#/components/parameters/placeId'
      tags:
        - Place
      responses:
        '204':
          $ref: '#/components/responses/ResourceCreated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /places/{placeId}/categories:
    get:
      summary: Place category list
      operationId: place.category.index
      description: Retrieve place category list.
      tags:
        - Place Category
      parameters:
        - $ref: '#/components/parameters/placeId'
        - $ref: '#/components/parameters/perPage'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/keywords'
      responses:
        '200':
          description: Place category list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minimum: 0
                    maximum: 100
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/PlaceCategory'
                  links:
                    type: object
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                  meta:
                    type: object
                    properties:
                      path:
                        type: string
                      per_page:
                        type: integer
                        examples:
                          - 15
                      next_cursor:
                        type:
                          - string
                          - 'null'
                      prev_cursor:
                        type:
                          - string
                          - 'null'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Create Place Category
      operationId: place.category.create
      description: Create new place category with given information.
      tags:
        - Place Category
      security:
        - bearer: []
      parameters:
        - $ref: '#/components/parameters/placeId'
      requestBody:
        description: Place Category to add to the place categories.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceCategory'
      responses:
        '201':
          $ref: '#/components/responses/ResourceCreated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /places/{placeId}/categories/{placeCategoryId}:
    get:
      summary: Get place category detail
      operationId: place.category.show
      description: Get place category information.
      parameters:
        - $ref: '#/components/parameters/placeId'
        - $ref: '#/components/parameters/placeCategoryId'
      tags:
        - Place Category
      responses:
        '200':
          description: Place category detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlaceCategory'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update place category
      operationId: place.category.update
      description: Update place category information.
      parameters:
        - $ref: '#/components/parameters/placeId'
        - $ref: '#/components/parameters/placeCategoryId'
      tags:
        - Place Category
      security:
        - bearer: []
      requestBody:
        description: Place category to update with.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceCategory'
      responses:
        '204':
          $ref: '#/components/responses/ResourceUpdated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
    delete:
      summary: Delete place category
      operationId: place.category.delete
      description: Delete place category from the place category list.
      parameters:
        - $ref: '#/components/parameters/placeId'
        - $ref: '#/components/parameters/placeCategoryId'
      tags:
        - Place Category
      security:
        - bearer: []
      responses:
        '204':
          $ref: '#/components/responses/ResourceDeleted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /places/{placeId}/products:
    get:
      summary: Place product list
      operationId: place.product.index
      description: Retrieve place products.
      tags:
        - Place Product
      parameters:
        - $ref: '#/components/parameters/placeId'
        - $ref: '#/components/parameters/perPage'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/keywords'
      responses:
        '200':
          description: Place product list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minimum: 0
                    maximum: 100
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/PlaceProduct'
                  links:
                    type: object
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                  meta:
                    type: object
                    properties:
                      path:
                        type: string
                      per_page:
                        type: integer
                        examples:
                          - 15
                      next_cursor:
                        type:
                          - string
                          - 'null'
                      prev_cursor:
                        type:
                          - string
                          - 'null'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Create Place Product
      operationId: place.product.create
      description: Create new place product with given information.
      tags:
        - Place Product
      security:
        - bearer: []
      parameters:
        - $ref: '#/components/parameters/placeId'
      requestBody:
        description: Place Product to add to the place categories.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceProduct'
      responses:
        '201':
          $ref: '#/components/responses/ResourceCreated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /places/{placeId}/products/{placeProductId}:
    get:
      summary: Get place product detail
      operationId: place.product.show
      description: Get place product information.
      parameters:
        - $ref: '#/components/parameters/placeId'
        - $ref: '#/components/parameters/placeProductId'
      tags:
        - Place Product
      responses:
        '200':
          description: Place product detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlaceProduct'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update place product
      operationId: place.product.update
      description: Update place product information.
      parameters:
        - $ref: '#/components/parameters/placeId'
        - $ref: '#/components/parameters/placeProductId'
      tags:
        - Place Product
      security:
        - bearer: []
      requestBody:
        description: Place product to update with.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceProduct'
      responses:
        '204':
          $ref: '#/components/responses/ResourceUpdated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
    delete:
      summary: Delete place product
      operationId: place.product.delete
      description: Delete place product from the place product list.
      parameters:
        - $ref: '#/components/parameters/placeId'
        - $ref: '#/components/parameters/placeProductId'
      tags:
        - Place Product
      security:
        - bearer: []
      responses:
        '204':
          $ref: '#/components/responses/ResourceDeleted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    ValidationError:
      type: object
      required:
        - message
        - errors
      properties:
        message:
          type: string
          examples:
            - The given data was invalid.
        errors:
          type: object
          properties:
            key 1:
              type: array
              items:
                type: string
                examples:
                  - Error message 1
            key 2:
              type: array
              items:
                type: string
                examples:
                  - Error message 2
    IssueTokenRequest:
      title: Issue Token
      description: Credentials for issue new token
      required:
        - email
        - password
        - device_name
      type: object
      properties:
        email:
          title: E-Mail Address
          description: User e-mail address
          type: string
          format: email
        password:
          title: Password
          description: User password
          type: string
          format: password
        device_name:
          title: Device Name
          description: Device name
          type: string
          format: device
          examples:
            - MyPhone
    IssueToken:
      type: object
      properties:
        device_name:
          type: string
          examples:
            - MyPhone
        token:
          type: string
          format: password
        abilities:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        id:
          title: ID
          description: ID of the user account
          type: string
          format: uuid
          readOnly: true
        name:
          title: User Name
          description: Display name for the user account
          type: string
          examples:
            - John Doe
        email:
          title: E-Mail Address
          description: User e-mail address (null if no permission)
          type:
            - string
            - 'null'
          format: email
          examples:
            - john@doe.tld
    AccountRegisterRequest:
      title: Account Register Request
      description: Credentials and user information for register new user account
      required:
        - name
        - email
        - password
        - password_confirmation
      type: object
      properties:
        name:
          title: User Name
          description: Display name for the user account
          type: string
          examples:
            - John Doe
        email:
          title: E-Mail Address
          description: User e-mail address
          type: string
          format: email
        password:
          title: Password
          description: User password
          type: string
          format: password
        password_confirmation:
          title: Password Confirmation
          description: User password confirmation (should be equal with password field)
          type: string
          format: password
    Place:
      type: object
      properties:
        id:
          title: ID
          description: ID of the place
          type: string
          format: uuid
          readOnly: true
        name:
          title: Place Name
          description: Display name for the place entry
          type: string
          examples:
            - Gunaydin Steakhouse
        email:
          title: E-Mail Address
          description: Place e-mail address (null if no permission)
          type:
            - string
            - 'null'
          format: email
          examples:
            - hello@gunaydinsteakhouse.tld
        phone:
          title: Phone
          description: Place phone number (null if no permission)
          type:
            - string
            - 'null'
          examples:
            - '+902122655252'
        address:
          title: Address
          description: Place address
          type:
            - string
            - 'null'
          examples:
            - Nispetiye Cad. Seher Yildizi Sok. No:15/A Etiler, Besiktas, Istanbul 34330 Türkiye
        is_active:
          title: Is Active
          description: Is this place active to list?
          type: boolean
          default: true
    Media:
      type: object
      properties:
        id:
          title: ID
          description: ID of the media object
          type: string
          format: uuid
          readOnly: true
        url:
          title: URL
          description: URL for the media object
          type: string
          examples:
            - https://cdn.ceptemenu.app/storage/example.jpg
    PlaceCategory:
      type: object
      properties:
        id:
          title: ID
          description: ID of the place category
          type: string
          format: uuid
          readOnly: true
        name:
          title: Place Category Name
          description: Display name for the place category entry
          type: string
          examples:
            - Burgers
    PlaceProduct:
      type: object
      properties:
        id:
          title: ID
          description: ID of the place product
          type: string
          format: uuid
          readOnly: true
        name:
          title: Place Product Name
          description: Display name for the place product entry
          type: string
          examples:
            - Chief' Burger
  responses:
    UnprocessableContent:
      description: Unprocessable Content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    TokenCreated:
      description: Token created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssueToken'
    AccountDetails:
      description: Account details retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    Unauthorized:
      description: Unauthorized
    ResourceCreated:
      description: Resource created
    NotFound:
      description: Resource not found
    ResourceUpdated:
      description: Resource updated
    ResourceDeleted:
      description: Resource deleted
  securitySchemes:
    bearer:
      type: http
      bearerFormat: JWT
      scheme: bearer
  parameters:
    perPage:
      name: perPage
      in: query
      description: How many items to return at one time (max 100)
      required: false
      schema:
        type: integer
        minimum: 1
    cursor:
      name: cursor
      in: query
      description: Cursor value to retrieve more place.
      required: false
      schema:
        type: string
    keywords:
      name: keywords
      in: query
      description: Keyword list to filter places.
      required: false
      schema:
        type: string
    placeId:
      name: placeId
      in: path
      required: true
      description: The ID of the place
      schema:
        type: string
        format: uuid
    placeCategoryId:
      name: placeCategoryId
      in: path
      required: true
      description: The ID of the place category
      schema:
        type: string
        format: uuid
    placeProductId:
      name: placeProductId
      in: path
      required: true
      description: The ID of the place product
      schema:
        type: string
        format: uuid
