openapi: 3.0.0
info:
  version: 0.1.0
  title: CepteMenu OAS
  description: Open API Specification for Cepte Menu application.
  license:
    name: MIT
  contact:
    name: API Support
    url: https://ceptemenu.app/support
    email: support@ceptemenu.app
servers:
  - url: https://api.ceptemenu.app
tags:
  - name: auth
    description: Authentication related endpoints
  - name: account
    description: Account related endpoints
  - name: place
    description: Place related endpoints
paths:
  /auth:
    post:
      summary: Issue new token
      operationId: auth.bearer
      description: Issue new bearer token with user credentials.
      tags:
        - auth
      requestBody:
        description: User account credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTokenRequest'
      responses:
        '201':
          $ref: '#/components/responses/TokenCreated'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /account:
    get:
      summary: Get user account detail
      operationId: account.me
      description: Get user account information for authenticated user.
      tags:
        - account
      security:
        - bearer: []
      responses:
        '200':
          $ref: '#/components/responses/AccountDetails'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Register new user account
      operationId: account.register
      description: Create new user account with given credentials and user account information.
      tags:
        - account
      requestBody:
        description: New user information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRegisterRequest'
      responses:
        '201':
          $ref: '#/components/responses/ResourceCreated'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /places:
    get:
      summary: Place list
      operationId: place.index
      description: Retrieve place list.
      tags:
        - place
      parameters:
        - $ref: '#/components/parameters/perPage'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/keywords'
      security:
        - {}
        - bearer:
            - read:place.detail
      responses:
        '200':
          description: Place list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minimum: 0
                    maximum: 100
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/Place'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        nullable: true
                        example: https://api.ceptemenu.app/places
                      last:
                        type: string
                        nullable: true
                        example: https://api.ceptemenu.app/places?cursor=eyJwbGFjZXMuaWQiOiJhZTQ4ZjFiYi04NTkwLTQ4NDktYjQwMi03ZGQ2YmIzYWQ0YWUiLCJfcG9pbnRzVG9OZXh0SXRlbXMiOnRydWV9
                      prev:
                        type: string
                        nullable: true
                        example: https://api.ceptemenu.app/places?cursor=eyJwbGFjZXMuaWQiOiJhZTQ4ZjFiYi04NTkwLTQ4NDktYjQwMi03ZGQ2YmIzYWQ0YWUiLCJfcG9pbnRzVG9OZXh0SXRlbXMiOnRydWV9
                      next:
                        type: string
                        nullable: true
                        example: https://api.ceptemenu.app/places?cursor=eyJwbGFjZXMuaWQiOiJhZTQ4ZjFiYi04NTkwLTQ4NDktYjQwMi03ZGQ2YmIzYWQ0YWUiLCJfcG9pbnRzVG9OZXh0SXRlbXMiOnRydWV9
                  meta:
                    type: object
                    properties:
                      path:
                        type: string
                        nullable: false
                        example: https://api.ceptemenu.app/places
                      per_page:
                        type: integer
                        example: 15
                        nullable: false
                      next_cursor:
                        type: string
                        nullable: true
                        example: eyJwbGFjZXMuaWQiOiJhZTQ4ZjFiYi04NTkwLTQ4NDktYjQwMi03ZGQ2YmIzYWQ0YWUiLCJfcG9pbnRzVG9OZXh0SXRlbXMiOnRydWV9
                      prev_cursor:
                        type: string
                        nullable: true
                        example: eyJwbGFjZXMuaWQiOiJhZTQ4ZjFiYi04NTkwLTQ4NDktYjQwMi03ZGQ2YmIzYWQ0YWUiLCJfcG9pbnRzVG9OZXh0SXRlbXMiOnRydWV9
    post:
      summary: Create Place
      operationId: place.create
      description: Create new place with given information.
      tags:
        - place
      security:
        - bearer:
            - create:place
      requestBody:
        description: Place to add to the application.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
      responses:
        '201':
          $ref: '#/components/responses/ResourceCreated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /places/{placeId}:
    get:
      summary: Get place detail
      operationId: place.show
      description: Get place information.
      tags:
        - place
      security:
        - {}
        - bearer:
            - read:place.detail
      responses:
        '200':
          description: Place detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Place'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    ValidationError:
      type: object
      required:
        - message
        - errors
      properties:
        message:
          type: string
          example: The given data was invalid.
        errors:
          type: object
          properties:
            key 1:
              type: array
              items:
                type: string
                example: Error message 1
            key 2:
              type: array
              items:
                type: string
                example: Error message 2
    IssueTokenRequest:
      title: Issue Token
      description: Credentials for issue new token
      required:
        - email
        - password
        - device_name
      type: object
      properties:
        email:
          title: E-Mail Address
          description: User e-mail address
          type: string
          format: email
        password:
          title: Password
          description: User password
          type: string
          format: password
        device_name:
          title: Device Name
          description: Device name
          type: string
          format: device
          example: MyPhone
    IssueToken:
      type: object
      properties:
        device_name:
          type: string
          example: MyPhone
        token:
          type: string
          format: password
        abilities:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        id:
          title: ID
          description: ID of the user account
          type: string
          format: uuid
          readOnly: true
          nullable: false
        name:
          title: User Name
          description: Display name for the user account
          type: string
          nullable: false
          example: John Doe
        email:
          title: E-Mail Address
          description: User e-mail address (null if no permission)
          type: string
          format: email
          nullable: true
          example: john@doe.tld
    AccountRegisterRequest:
      title: Account Register Request
      description: Credentials and user information for register new user account
      required:
        - name
        - email
        - password
        - password_confirmation
      type: object
      properties:
        name:
          title: User Name
          description: Display name for the user account
          type: string
          example: John Doe
        email:
          title: E-Mail Address
          description: User e-mail address
          type: string
          format: email
        password:
          title: Password
          description: User password
          type: string
          format: password
        password_confirmation:
          title: Password Confirmation
          description: User password confirmation (should be equal with password field)
          type: string
          format: password
    Place:
      type: object
      properties:
        id:
          title: ID
          description: ID of the place
          type: string
          format: uuid
          readOnly: true
          nullable: false
        name:
          title: Place Name
          description: Display name for the place entry
          type: string
          nullable: false
          example: Gunaydin Steakhouse
        email:
          title: E-Mail Address
          description: Place e-mail address (null if no permission)
          type: string
          format: email
          nullable: true
          example: hello@gunaydinsteakhouse.tld
        phone:
          title: Phone
          description: Place phone number (null if no permission)
          type: string
          nullable: true
          example: '+902122655252'
        address:
          title: Address
          description: Place address
          type: string
          nullable: true
          example: Nispetiye Cad. Seher Yildizi Sok. No:15/A Etiler, Besiktas, Istanbul 34330 Türkiye
        is_active:
          title: Is Active
          description: Is this place active to list?
          type: boolean
          default: true
  responses:
    UnprocessableContent:
      description: Unprocessable Content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    TokenCreated:
      description: Token created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssueToken'
    AccountDetails:
      description: Account details retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    Unauthorized:
      description: Unauthorized
    ResourceCreated:
      description: Resource created
    NotFound:
      description: Resource not found
  securitySchemes:
    bearer:
      type: http
      bearerFormat: JWT
      scheme: bearer
  parameters:
    perPage:
      name: perPage
      in: query
      description: How many items to return at one time (max 100)
      required: false
    cursor:
      name: cursor
      in: query
      description: Cursor value to retrieve more place.
      required: false
    keywords:
      name: keywords
      in: query
      description: Keyword list to filter places.
      required: false
